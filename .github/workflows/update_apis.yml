name: Update APIs

on:
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday

jobs:
  update-apis:
    runs-on: ubuntu-latest
    # Add permission for GitHub token
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # Use the built-in GITHUB_TOKEN for authentication
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4 feedparser
        
    - name: Add sample API data
      run: |
        python -c "
        import json, os, datetime
        current_time = datetime.datetime.now().isoformat()
        
        # Create sample data with multiple APIs across different categories
        data = {
            'categories': [
                {
                    'name': 'Weather',
                    'description': 'APIs for weather data and forecasts',
                    'apis': [
                        {
                            'name': 'OpenWeatherMap',
                            'description': 'Current weather data, forecasts, and historical data for any location',
                            'url': 'https://openweathermap.org/api',
                            'auth': 'apiKey',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 95,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        },
                        {
                            'name': 'WeatherAPI',
                            'description': 'Weather forecast and historical data with high precision',
                            'url': 'https://www.weatherapi.com/',
                            'auth': 'apiKey',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 90,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        }
                    ]
                },
                {
                    'name': 'Development',
                    'description': 'APIs for software development tools and services',
                    'apis': [
                        {
                            'name': 'GitHub',
                            'description': 'Complete developer platform to build, scale, and deliver secure software',
                            'url': 'https://docs.github.com/en/rest',
                            'auth': 'OAuth',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 98,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        },
                        {
                            'name': 'JSON Placeholder',
                            'description': 'Fake data for testing and prototyping',
                            'url': 'https://jsonplaceholder.typicode.com/',
                            'auth': '',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 90,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        }
                    ]
                },
                {
                    'name': 'Entertainment',
                    'description': 'APIs for entertainment content and services',
                    'apis': [
                        {
                            'name': 'TMDB',
                            'description': 'Community-built movie and TV database',
                            'url': 'https://www.themoviedb.org/documentation/api',
                            'auth': 'apiKey',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 94,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        },
                        {
                            'name': 'OMDB',
                            'description': 'Open Movie Database',
                            'url': 'https://www.omdbapi.com/',
                            'auth': 'apiKey',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 92,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        }
                    ]
                },
                {
                    'name': 'Music',
                    'description': 'APIs for music data and services',
                    'apis': [
                        {
                            'name': 'Spotify',
                            'description': 'Access to Spotify data: music, artists, albums, and more',
                            'url': 'https://developer.spotify.com/documentation/web-api/',
                            'auth': 'OAuth',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 96,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        },
                        {
                            'name': 'Deezer',
                            'description': 'Music streaming service API',
                            'url': 'https://developers.deezer.com/api',
                            'auth': 'OAuth',
                            'https': True,
                            'cors': 'unknown',
                            'popularity': 85,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        }
                    ]
                },
                {
                    'name': 'News',
                    'description': 'APIs for news content and services',
                    'apis': [
                        {
                            'name': 'NewsAPI',
                            'description': 'Search for articles from over 80,000 news sources',
                            'url': 'https://newsapi.org/',
                            'auth': 'apiKey',
                            'https': True,
                            'cors': 'yes',
                            'popularity': 90,
                            'status': 'active',
                            'working': True,
                            'last_checked': current_time
                        }
                    ]
                }
            ],
            'metadata': {
                'total_apis': 9,
                'last_updated': current_time,
                'version': '1.0.0'
            }
        }
        
        # Ensure data directory exists
        os.makedirs('data', exist_ok=True)
        
        # Save data to file
        with open('data/apis.json', 'w', encoding='utf-8') as file:
            json.dump(data, file, indent=2)
        
        print('Sample API data created successfully!')
        "
        
    - name: Run API discovery script
      run: |
        python scripts/discover_trending_apis.py --mode comprehensive --readme
        
    - name: Update README
      run: |
        python scripts/update_readme.py
        
    - name: Commit and push if changes
      run: |
        git config --global user.name 'Gunjan Jaswaal'
        git config --global user.email 'gunjanjaswal@gmail.com'
        git add data/apis.json README.md
        git diff --quiet && git diff --staged --quiet || git commit -m "Update APIs and README [automated]"
        git push
